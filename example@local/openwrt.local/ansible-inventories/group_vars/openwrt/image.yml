# code: language=ansible

image:
  builder:

  groups:
    - v22.03.5
    - snapshots

image_groups:
  v22.03.5:
    builder:
      release: 22.03.5
      target: x86-64
      # url: "https://downloads.openwrt.org/releases/22.03.5/targets/x86/64/openwrt-imagebuilder-22.03.5-x86-64.Linux-x86_64.tar.xz"
      # openwrt and image-builder cannot be built on case-insensitive file partitions
      # since windows ntfs are case-insensitive by default, it is costly to adjust them.
      # so can only build in non-host-mounted directories, not like wsl '/mnt/c'.
      path: "$HOME/.openwrt/{{ inventory_hostname }}"
      option:
        PROFILE: generic
        # no file to image
        # FILES: "{{ (inventory_dir ~ '/../image/' ~ inventory_hostname ~ '/22.03.5/file') | realpath }}"
        PACKAGES: >
          base-files
          ca-bundle
          dropbear
          fstools
          libc
          libgcc
          libustream-wolfssl
          logd
          mtd
          netifd
          opkg
          uci
          uclient-fetch
          urandom-seed
          urngd
          busybox
          procd
          procd-ujail
          procd-seccomp
          partx-utils
          mkf2fs
          e2fsprogs
          kmod-button-hotplug
          dnsmasq
          firewall4
          nftables
          kmod-nft-offload
          odhcp6c
          odhcpd-ipv6only
          ppp
          ppp-mod-pppoe

          -dnsmasq
          dnsmasq-full

          fdisk
          cfdisk
          parted
          lsblk
          losetup
          resize2fs

          python3

          luci
          luci-app-firewall
          luci-app-opkg
          luci-base
          luci-lib-base
          luci-lib-ip
          luci-lib-jsonc
          luci-lib-nixio
          luci-mod-admin-full
          luci-mod-network
          luci-mod-status
          luci-mod-system
          luci-proto-ipv6
          luci-proto-ppp
          luci-ssl
          luci-theme-bootstrap

          docker
          dockerd
          docker-compose
          luci-lib-docker
          luci-app-dockerman
      config:
        CONFIG_TARGET_ROOTFS_PARTSIZE: 512
      output:
        path: build_dir/target-x86_64_musl/linux-x86_64/tmp/
        dest: "{{ inventory_dir }}/../image/{{ inventory_hostname }}/22.03.5/build/"
    resizer:
      path: "{{ inventory_dir }}/../image/{{ inventory_hostname }}/22.03.5/build/"
      regex: '.*\.img\.gz$'
      size: 512M
      output:
        dest: "{{ inventory_dir }}/../image/{{ inventory_hostname }}/22.03.5/resize/"
    converter:
      path: "{{ inventory_dir }}/../image/{{ inventory_hostname }}/22.03.5/resize/"
      regex: '.*\.img\.gz$'
      size: vmdk
      output:
        dest: "{{ inventory_dir }}/../image/{{ inventory_hostname }}/22.03.5/convert/"

  snapshots:
    builder:
      release: snapshots
      target: x86-64
      # url: "https://downloads.openwrt.org/snapshots/targets/x86/64/openwrt-imagebuilder-x86-64.Linux-x86_64.tar.xz"
      path: "$HOME/.openwrt/{{ inventory_hostname }}"
      option:
        PROFILE: generic
        # no file to image
        # FILES: "{{ (inventory_dir ~ '/../image/' ~ inventory_hostname ~ '/snapshots/file') | realpath }}"
        PACKAGES: >
          base-files
          ca-bundle
          dropbear
          fstools
          libc
          libgcc
          libustream-wolfssl
          logd
          mtd
          netifd
          opkg
          uci
          uclient-fetch
          urandom-seed
          urngd
          busybox
          procd
          procd-ujail
          procd-seccomp
          partx-utils
          mkf2fs
          e2fsprogs
          kmod-button-hotplug
          dnsmasq
          firewall4
          nftables
          kmod-nft-offload
          odhcp6c
          odhcpd-ipv6only
          ppp
          ppp-mod-pppoe

          -dnsmasq
          dnsmasq-full

          fdisk
          cfdisk
          parted
          lsblk
          losetup
          resize2fs

          python3

          luci
          luci-app-firewall
          luci-app-opkg
          luci-base
          luci-lib-base
          luci-lib-ip
          luci-lib-jsonc
          luci-lib-nixio
          luci-mod-admin-full
          luci-mod-network
          luci-mod-status
          luci-mod-system
          luci-proto-ipv6
          luci-proto-ppp
          luci-ssl
          luci-theme-bootstrap

          docker
          dockerd
          docker-compose
          luci-lib-docker
          luci-app-dockerman
      config:
        CONFIG_TARGET_ROOTFS_PARTSIZE: 512
      output:
        path: build_dir/target-x86_64_musl/linux-x86_64/tmp/
        dest: "{{ inventory_dir }}/../image/{{ inventory_hostname }}/snapshots/image/"
    resizer:
      # path: "{{ inventory_dir }}/../image/{{ inventory_hostname }}/snapshots/image/"
      # regex: '.*\.img\.gz$'
      # size: 512M
    converter:
      # path: "{{ inventory_dir }}/../image/{{ inventory_hostname }}/snapshots/image/"
      # regex: '.*\.img\.gz$'
      # size: vmdk